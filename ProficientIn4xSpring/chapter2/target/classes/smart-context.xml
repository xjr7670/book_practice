<?xml version="1.0" encoding="UTF-8" ?>
<!-- 引用 Spring 的多个 Schema 空间的格式定义文件 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <!-- 扫描类包，将标注 Spring 注解的类自动转化为 Bean，同时完成 Bean 的注入 -->
    <context:component-scan base-package="com.smart.dao" />

    <!-- 扫描 service 类包，应用 Spring 的注解配置 -->
    <context:component-scan base-package="com.smart.service" />

    <!-- 定义一个使用 DBCP 实现的数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:url="jdbc:mysql://localhost:3306/sampledb"
          p:username="root"
          p:password="root" />

    <!-- 定义 JDBC 模板 Bean -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource" />

    <!-- 事务管理器配置 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource" />

    <!-- 通过 AOP 配置提供事务增强，让 service 包下所有的 Bean 的所有方法拥有事务 -->
    <aop:config proxy-target-class="true">
        <aop:pointcut expression=" (execution(* com.smart.service..*(..))) and
        (@annotation(org.springframework.transaction.annotation.Transactional)))" id="serviceMethod" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
</beans>
